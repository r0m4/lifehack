{
  "name": "handlebars-loader",
  "contributors": [
    {
      "name": "Alan @altano"
    },
    {
      "name": "Tobias Koppers @sokra"
    },
    {
      "name": "Jason Anderson @diurnalist"
    }
  ],
  "description": "handlebars loader module for webpack",
  "dependencies": {
    "async": "~0.2.10",
    "fastparse": "^1.0.0",
    "loader-utils": "0.2.x"
  },
  "peerDependencies": {
    "handlebars": ">= 1.3.0 < 4"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/altano/handlebars-loader.git"
  },
  "version": "1.1.1",
  "devDependencies": {
    "html-loader": "^0.3.0",
    "mocha": "^1.21.4",
    "sinon": "^1.10.3"
  },
  "bugs": {
    "url": "https://github.com/altano/handlebars-loader/issues"
  },
  "homepage": "https://github.com/altano/handlebars-loader",
  "main": "index.js",
  "files": [
    "index.js",
    "lib"
  ],
  "directories": {
    "example": "example",
    "test": "test"
  },
  "scripts": {
    "test": "mocha"
  },
  "author": "",
  "license": "MIT",
  "readme": "# handlebars-loader\n\nA [`handlebars`](http://handlebarsjs.com) template loader for [`webpack`](https://github.com/webpack/webpack).\n\n*Handlebars 3 now supported*\n\n## General Usage\n\n### webpack configuration\n\n```javascript\n{\n  ...\n  module: {\n    loaders: [\n      ...\n      { test: /\\.handlebars$/, loader: \"handlebars-loader\" }\n    ]\n  }\n}\n```\n\n### Your JS making use of the templates\n\n```javascript\nvar template = require(\"./file.handlebars\");\n// => returns file.handlebars content as a template function\n```\n\n## Details\n\nThe loader resolves partials and helpers automatically. They are looked up relative to the current directory (this can be modified with the `rootRelative` option) or as a module if you prefix with `$`.\n\n```handlebars\nA file \"/folder/file.handlebars\".\n{{> partial}} will reference \"/folder/partial.handlebars\".\n{{> ../partial}} will reference \"/partial.handlebars\".\n{{> $module/partial}} will reference \"/folder/node_modules/module/partial.handlebars\".\n{{helper}} will reference the helper \"/folder/helper.js\" if this file exists.\n{{[nested/helper] 'helper parameter'}} will reference the helper \"/folder/nested/helper.js\" if this file exists, passes 'helper parameter' as first parameter to helper.\n{{../helper}} {{$module/helper}} are resolved similarly to partials.\n```\n\nThe following query options are supported:\n - *helperDirs*: Defines additional directories to be searched for helpers. Allows helpers to be defined in a directory and used globally without relative paths. You must surround helpers in subdirectories with brackets (Handlerbar helper identifiers can't have forward slashes without this). See [example](https://github.com/altano/handlebars-loader/tree/master/examples/helperDirs)\n - *runtime*: Specify the path to the handlebars runtime library. Defaults to look under the local handlebars npm module, i.e. `handlebars/runtime`.\n - *extensions*: Searches for templates with alternate extensions. Defaults are .handlebars, .hbs, and '' (no extension).\n - *inlineRequires*: Defines a regex that identifies strings within helper/partial parameters that should be replaced by inline require statements.\n - *rootRelative*: When automatically resolving partials and helpers, use an implied root path if none is present. Default = `./`. Setting this to be empty effectively turns off automatically resolving relative handlebars resources for items like `{{helper}}`. `{{./helper}}` will still resolve as expected.\n - *knownHelpers*: Array of helpers that are registered at runtime and should not explicitly be required by webpack. This helps with interoperability for libraries like Thorax [helpers](http://thoraxjs.org/api.html#template-helpers).\n - *debug*: Shows trace information to help debug issues (e.g. resolution of helpers).\n\nSee [`webpack`](https://github.com/webpack/webpack) documentation for more information regarding loaders.\n\n## Full examples\n\nSee `examples` folder in this repo. The examples are fully runnable and demonstrate a number of concepts (using partials and helpers) -- just run `webpack` in that directory to produce dist/bundle.js in the same folder, open index.html.\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license)\n",
  "readmeFilename": "README.md",
  "_id": "handlebars-loader@1.1.1",
  "dist": {
    "shasum": "ed36d19cc2946736a1d62166dcae0614ae7bca62"
  },
  "_from": "handlebars-loader@",
  "_resolved": "https://registry.npmjs.org/handlebars-loader/-/handlebars-loader-1.1.1.tgz"
}
